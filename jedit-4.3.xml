<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method">
		<instance>
			<role name="Creator" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassVisitor" />
			<role name="FactoryMethod()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassVisitor::visitMethod(int, java.lang.String, java.lang.String, java.lang.String[]):org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeVisitor" />
		</instance>
		<instance>
			<role name="Creator" element="org.gjt.sp.jedit.gui.DockableWindowManager" />
			<role name="FactoryMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::getDockingLayout(org.gjt.sp.jedit.View$ViewConfig):org.gjt.sp.jedit.gui.DockableWindowManager$DockingLayout" />
		</instance>
		<instance>
			<role name="Creator" element="org.gjt.sp.jedit.gui.DockingFrameworkProvider" />
			<role name="FactoryMethod()" element="org.gjt.sp.jedit.gui.DockingFrameworkProvider::create(org.gjt.sp.jedit.View, org.gjt.sp.jedit.gui.DockableWindowFactory, org.gjt.sp.jedit.View$ViewConfig):org.gjt.sp.jedit.gui.DockableWindowManager" />
			<role name="FactoryMethod()" element="org.gjt.sp.jedit.gui.DockingFrameworkProvider::createDockingLayout():org.gjt.sp.jedit.gui.DockableWindowManager$DockingLayout" />
		</instance>
		<instance>
			<role name="Creator" element="org.gjt.sp.jedit.gui.statusbar.StatusWidgetFactory" />
			<role name="FactoryMethod()" element="org.gjt.sp.jedit.gui.statusbar.StatusWidgetFactory::getWidget(org.gjt.sp.jedit.View):org.gjt.sp.jedit.gui.statusbar.Widget" />
		</instance>
		<instance>
			<role name="Creator" element="org.gjt.sp.jedit.Macros$Handler" />
			<role name="FactoryMethod()" element="org.gjt.sp.jedit.Macros$Handler::createMacro(java.lang.String, java.lang.String):org.gjt.sp.jedit.Macros$Macro" />
		</instance>
	</pattern>
	<pattern name="Prototype" />
	<pattern name="Singleton">
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.ClassGenerator" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.ClassGenerator::cg:org.gjt.sp.jedit.bsh.ClassGenerator" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter::CLASSSTATIC:org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter::CLASSINSTANCE:org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter::CLASSCLASSES:org.gjt.sp.jedit.bsh.ClassGeneratorImpl$ClassNodeFilter" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.ClassGeneratorUtil$ConstructorArgs" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.ClassGeneratorUtil$ConstructorArgs::DEFAULT:org.gjt.sp.jedit.bsh.ClassGeneratorUtil$ConstructorArgs" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::userClassPath:org.gjt.sp.jedit.bsh.classpath.BshClassPath" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::bootClassPath:org.gjt.sp.jedit.bsh.classpath.BshClassPath" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.CollectionManager" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.CollectionManager::manager:org.gjt.sp.jedit.bsh.CollectionManager" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.NameSpace" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.NameSpace::JAVACODE:org.gjt.sp.jedit.bsh.NameSpace" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::VOID_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::BOOLEAN_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::CHAR_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::BYTE_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::SHORT_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::INT_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::FLOAT_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::LONG_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Type::DOUBLE_TYPE:org.gjt.sp.jedit.bsh.org.objectweb.asm.Type" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.Primitive$Special" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.Primitive$Special::NULL_VALUE:org.gjt.sp.jedit.bsh.Primitive$Special" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.Primitive$Special::VOID_TYPE:org.gjt.sp.jedit.bsh.Primitive$Special" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.Primitive" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.Primitive::NULL:org.gjt.sp.jedit.bsh.Primitive" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.Primitive::VOID:org.gjt.sp.jedit.bsh.Primitive" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.ReflectManager" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.ReflectManager::rfm:org.gjt.sp.jedit.bsh.ReflectManager" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.bsh.SimpleNode" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.bsh.SimpleNode::JAVACODE:org.gjt.sp.jedit.bsh.SimpleNode" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.buffer.KillRing" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.buffer.KillRing::killRing:org.gjt.sp.jedit.buffer.KillRing" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.gui.DockableWindowFactory" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.gui.DockableWindowFactory::instance:org.gjt.sp.jedit.gui.DockableWindowFactory" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.gui.DockingLayoutManager" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.gui.DockingLayoutManager::instance:org.gjt.sp.jedit.gui.DockingLayoutManager" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.io.FavoritesVFS" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.io.FavoritesVFS::instance:org.gjt.sp.jedit.io.FavoritesVFS" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.pluginmgr.PluginManager" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.pluginmgr.PluginManager::instance:org.gjt.sp.jedit.pluginmgr.PluginManager" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.syntax.DummyTokenHandler" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.syntax.DummyTokenHandler::INSTANCE:org.gjt.sp.jedit.syntax.DummyTokenHandler" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.syntax.ModeProvider" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.syntax.ModeProvider::instance:org.gjt.sp.jedit.syntax.ModeProvider" />
		</instance>
		<instance>
			<role name="Singleton" element="org.gjt.sp.jedit.textarea.TextArea" />
			<role name="uniqueInstance" element="org.gjt.sp.jedit.textarea.TextArea::focusedComponent:org.gjt.sp.jedit.textarea.TextArea" />
		</instance>
	</pattern>
	<pattern name="(Object)Adapter">
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.help.HelpViewer" />
			<role name="Adaptee" element="org.gjt.sp.jedit.help.HelpTOCPanel" />
			<role name="adaptee" element="org.gjt.sp.jedit.help.HelpViewer::toc:org.gjt.sp.jedit.help.HelpTOCPanel" />
			<role name="Request()" element="org.gjt.sp.jedit.help.HelpViewer::gotoURL(java.lang.String, boolean, int):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.help.HelpViewer" />
			<role name="Adaptee" element="org.gjt.sp.jedit.help.HistoryButton" />
			<role name="adaptee" element="org.gjt.sp.jedit.help.HelpViewer::back:org.gjt.sp.jedit.help.HistoryButton" />
			<role name="adaptee" element="org.gjt.sp.jedit.help.HelpViewer::forward:org.gjt.sp.jedit.help.HistoryButton" />
			<role name="Request()" element="org.gjt.sp.jedit.help.HelpViewer::historyUpdated():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.help.HelpViewer" />
			<role name="Adaptee" element="org.gjt.sp.jedit.help.HelpHistoryModel" />
			<role name="adaptee" element="org.gjt.sp.jedit.help.HelpViewer::historyModel:org.gjt.sp.jedit.help.HelpHistoryModel" />
			<role name="Request()" element="org.gjt.sp.jedit.help.HelpViewer::gotoURL(java.lang.String, boolean, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.help.HelpViewer::historyUpdated():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.OptionGroup" />
			<role name="Adapter" element="org.gjt.sp.jedit.options.PluginOptions" />
			<role name="adaptee" element="org.gjt.sp.jedit.options.PluginOptions::pluginsGroup:org.gjt.sp.jedit.OptionGroup" />
			<role name="Request()" element="org.gjt.sp.jedit.options.PluginOptions::createOptionTreeModel():org.gjt.sp.jedit.gui.OptionsDialog$OptionTreeModel" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.HistoryTextArea" />
			<role name="Adapter" element="org.gjt.sp.jedit.search.SearchDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.search.SearchDialog::find:org.gjt.sp.jedit.gui.HistoryTextArea" />
			<role name="Request()" element="org.gjt.sp.jedit.search.SearchDialog::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.browser.BrowserView" />
			<role name="Adapter" element="org.gjt.sp.jedit.browser.VFSBrowser" />
			<role name="adaptee" element="org.gjt.sp.jedit.browser.VFSBrowser::browserView:org.gjt.sp.jedit.browser.BrowserView" />
			<role name="Request()" element="org.gjt.sp.jedit.browser.VFSBrowser::handleMessage(org.gjt.sp.jedit.EBMessage):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.View" />
			<role name="Adaptee" element="org.gjt.sp.jedit.search.SearchBar" />
			<role name="adaptee" element="org.gjt.sp.jedit.View::searchBar:org.gjt.sp.jedit.search.SearchBar" />
			<role name="Request()" element="org.gjt.sp.jedit.View::handleMessage(org.gjt.sp.jedit.EBMessage):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.EditPane" />
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.BufferSwitcher" />
			<role name="adaptee" element="org.gjt.sp.jedit.EditPane::bufferSwitcher:org.gjt.sp.jedit.gui.BufferSwitcher" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferAdded(org.gjt.sp.jedit.Buffer, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferRemoved(org.gjt.sp.jedit.Buffer, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferMoved(org.gjt.sp.jedit.Buffer, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferSetSorted():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.EditPane" />
			<role name="Adaptee" element="org.gjt.sp.jedit.bufferset.BufferSet" />
			<role name="adaptee" element="org.gjt.sp.jedit.EditPane::bufferSet:org.gjt.sp.jedit.bufferset.BufferSet" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferAdded(org.gjt.sp.jedit.Buffer, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferRemoved(org.gjt.sp.jedit.Buffer, int):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.gui.PanelWindowContainer" />
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.DockablePanel" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.PanelWindowContainer::dockablePanel:org.gjt.sp.jedit.gui.DockablePanel" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::unregister(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::remove(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::show(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.gui.FloatingWindowContainer" />
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.FloatingWindowContainer::entry:org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.FloatingWindowContainer::register(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.SelectionLengthWidgetFactory$SelectionLengthWidget" />
			<role name="Adaptee" element="org.gjt.sp.jedit.textarea.TextArea" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.SelectionLengthWidgetFactory$SelectionLengthWidget::textArea:org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.SelectionLengthWidgetFactory$SelectionLengthWidget::handleMessage(org.gjt.sp.jedit.EBMessage):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.EditPane" />
			<role name="Adaptee" element="org.gjt.sp.jedit.Buffer" />
			<role name="adaptee" element="org.gjt.sp.jedit.EditPane::buffer:org.gjt.sp.jedit.Buffer" />
			<role name="adaptee" element="org.gjt.sp.jedit.EditPane::recentBuffer:org.gjt.sp.jedit.Buffer" />
			<role name="Request()" element="org.gjt.sp.jedit.EditPane::bufferRemoved(org.gjt.sp.jedit.Buffer, int):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.pluginmgr.InstallPanel$ChoosePluginSet" />
			<role name="Adapter" element="org.gjt.sp.jedit.pluginmgr.InstallPanel" />
			<role name="adaptee" element="org.gjt.sp.jedit.pluginmgr.InstallPanel::chooseButton:org.gjt.sp.jedit.pluginmgr.InstallPanel$ChoosePluginSet" />
			<role name="Request()" element="org.gjt.sp.jedit.pluginmgr.InstallPanel::handleMessage(org.gjt.sp.jedit.EBMessage):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton" />
			<role name="Adapter" element="org.gjt.sp.jedit.browser.VFSBrowser" />
			<role name="adaptee" element="org.gjt.sp.jedit.browser.VFSBrowser::plugins:org.gjt.sp.jedit.browser.VFSBrowser$PluginsMenuButton" />
			<role name="Request()" element="org.gjt.sp.jedit.browser.VFSBrowser::handleMessage(org.gjt.sp.jedit.EBMessage):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.bufferset.BufferSet$Scope" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.BufferSetWidgetFactory$BufferSetWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.BufferSetWidgetFactory$BufferSetWidget::currentScope:org.gjt.sp.jedit.bufferset.BufferSet$Scope" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.BufferSetWidgetFactory$BufferSetWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.statusbar.ErrorsWidgetFactory$ErrorHighlight" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.ErrorsWidgetFactory$ErrorWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.ErrorsWidgetFactory$ErrorWidget::errorHighlight:org.gjt.sp.jedit.gui.statusbar.ErrorsWidgetFactory$ErrorHighlight" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.ErrorsWidgetFactory$ErrorWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.BeanShellAction$CachedBshMethod" />
			<role name="Adapter" element="org.gjt.sp.jedit.BeanShellAction" />
			<role name="adaptee" element="org.gjt.sp.jedit.BeanShellAction::code:org.gjt.sp.jedit.BeanShellAction$CachedBshMethod" />
			<role name="Request()" element="org.gjt.sp.jedit.BeanShellAction::invoke(org.gjt.sp.jedit.View):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.browser.VFSBrowser" />
			<role name="Adapter" element="org.gjt.sp.jedit.browser.VFSFileChooserDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.browser.VFSFileChooserDialog::browser:org.gjt.sp.jedit.browser.VFSBrowser" />
			<role name="Request()" element="org.gjt.sp.jedit.browser.VFSFileChooserDialog::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.browser.VFSBrowser" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.FilePropertiesDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.FilePropertiesDialog::browser:org.gjt.sp.jedit.browser.VFSBrowser" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.FilePropertiesDialog::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.PasteFromListDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.PasteFromListDialog::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PasteFromListDialog::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.SelectLineRange" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.SelectLineRange::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.SelectLineRange::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.textarea.DisplayManager" />
			<role name="Adapter" element="org.gjt.sp.jedit.textarea.BufferHandler" />
			<role name="adaptee" element="org.gjt.sp.jedit.textarea.BufferHandler::displayManager:org.gjt.sp.jedit.textarea.DisplayManager" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::bufferLoaded(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::foldHandlerChanged(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::preContentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::transactionComplete(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.DockableWindowManagerImpl" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.FloatingWindowContainer" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.FloatingWindowContainer::dockableWindowManager:org.gjt.sp.jedit.gui.DockableWindowManagerImpl" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.FloatingWindowContainer::register(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.DockableWindowManagerImpl" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.PanelWindowContainer" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.PanelWindowContainer::wm:org.gjt.sp.jedit.gui.DockableWindowManagerImpl" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::register(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::unregister(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::remove(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::show(org.gjt.sp.jedit.gui.DockableWindowManagerImpl$Entry):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::showMostRecent():void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PanelWindowContainer::show(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.SettingsXML" />
			<role name="Adapter" element="org.gjt.sp.jedit.JEditRegisterSaver" />
			<role name="adaptee" element="org.gjt.sp.jedit.JEditRegisterSaver::registersXML:org.gjt.sp.jedit.SettingsXML" />
			<role name="Request()" element="org.gjt.sp.jedit.JEditRegisterSaver::loadRegisters():void" />
			<role name="Request()" element="org.gjt.sp.jedit.JEditRegisterSaver::saveRegisters():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="Adapter" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter::innerClasses:org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter::fields:org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter::visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter::visitField(int, java.lang.String, java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.InputHandler" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.InputHandler::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.InputHandler::processKeyEvent(java.awt.event.KeyEvent, int, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.browser.VFSFileNameField" />
			<role name="Adapter" element="org.gjt.sp.jedit.browser.VFSFileChooserDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.browser.VFSFileChooserDialog::filenameField:org.gjt.sp.jedit.browser.VFSFileNameField" />
			<role name="Request()" element="org.gjt.sp.jedit.browser.VFSFileChooserDialog::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Adapter" element="org.gjt.sp.jedit.input.TextAreaInputHandler" />
			<role name="adaptee" element="org.gjt.sp.jedit.input.TextAreaInputHandler::textArea:org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Request()" element="org.gjt.sp.jedit.input.TextAreaInputHandler::processKeyEvent(java.awt.event.KeyEvent, int, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.buffer.UndoManager" />
			<role name="Adapter" element="org.gjt.sp.jedit.buffer.UndoManager$Remove" />
			<role name="adaptee" element="org.gjt.sp.jedit.buffer.UndoManager$Remove::mgr:org.gjt.sp.jedit.buffer.UndoManager" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.UndoManager$Remove::undo():int" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.UndoManager$Remove::redo():int" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.buffer.UndoManager" />
			<role name="Adapter" element="org.gjt.sp.jedit.buffer.UndoManager$Insert" />
			<role name="adaptee" element="org.gjt.sp.jedit.buffer.UndoManager$Insert::mgr:org.gjt.sp.jedit.buffer.UndoManager" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.UndoManager$Insert::undo():int" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.UndoManager$Insert::redo():int" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter" />
			<role name="Adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.Label" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::currentBlock:org.gjt.sp.jedit.bsh.org.objectweb.asm.Label" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitJumpInsn(int, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLabel(org.gjt.sp.jedit.bsh.org.objectweb.asm.Label):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitTableSwitchInsn(int, int, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label[]):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLookupSwitchInsn(org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, int[], org.gjt.sp.jedit.bsh.org.objectweb.asm.Label[]):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter" />
			<role name="Adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::code:org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::catchTable:org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::localVar:org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::lineNumber:org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitInsn(int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitIntInsn(int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitVarInsn(int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitTypeInsn(int, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitJumpInsn(int, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLdcInsn(java.lang.Object):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitIincInsn(int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitTableSwitchInsn(int, int, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label[]):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLookupSwitchInsn(org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, int[], org.gjt.sp.jedit.bsh.org.objectweb.asm.Label[]):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitMultiANewArrayInsn(java.lang.String, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitTryCatchBlock(org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLocalVariable(java.lang.String, java.lang.String, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLineNumber(int, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Adapter" element="org.gjt.sp.jedit.textarea.BufferHandler" />
			<role name="adaptee" element="org.gjt.sp.jedit.textarea.BufferHandler::textArea:org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::foldLevelChanged(org.gjt.sp.jedit.buffer.JEditBuffer, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::contentInserted(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::preContentInserted(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::preContentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::contentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.BufferHandler::transactionComplete(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.EncodingWidgetFactory$EncodingWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.EncodingWidgetFactory$EncodingWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.EncodingWidgetFactory$EncodingWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.FoldWidgetFactory$FoldWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.FoldWidgetFactory$FoldWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.FoldWidgetFactory$FoldWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.LineSepWidgetFactory$LineSepWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.LineSepWidgetFactory$LineSepWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.LineSepWidgetFactory$LineSepWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.ModeWidgetFactory$ModeWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.ModeWidgetFactory$ModeWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.ModeWidgetFactory$ModeWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.MultiSelectWidgetFactory$MultiSelectWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.MultiSelectWidgetFactory$MultiSelectWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.MultiSelectWidgetFactory$MultiSelectWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.OverwriteWidgetFactory$OverwriteWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.OverwriteWidgetFactory$OverwriteWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.OverwriteWidgetFactory$OverwriteWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.RectSelectWidgetFactory$RectSelectWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.RectSelectWidgetFactory$RectSelectWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.RectSelectWidgetFactory$RectSelectWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.View" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.statusbar.WrapWidgetFactory$WrapWidget" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.statusbar.WrapWidgetFactory$WrapWidget::view:org.gjt.sp.jedit.View" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.statusbar.WrapWidgetFactory$WrapWidget::update():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter" />
			<role name="Adapter" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter" />
			<role name="adaptee" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::cw:org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitTypeInsn(int, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLdcInsn(java.lang.Object):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitMultiANewArrayInsn(java.lang.String, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitTryCatchBlock(org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLocalVariable(java.lang.String, java.lang.String, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter::visitLineNumber(int, org.gjt.sp.jedit.bsh.org.objectweb.asm.Label):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.buffer.BufferChangeListener" />
			<role name="Adapter" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter" />
			<role name="adaptee" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::delegate:org.gjt.sp.jedit.buffer.BufferChangeListener" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::foldLevelChanged(org.gjt.sp.jedit.buffer.JEditBuffer, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::contentInserted(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::contentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::preContentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::transactionComplete(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::foldHandlerChanged(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::bufferLoaded(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.OptionPane" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.OptionsDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.OptionsDialog::currentPane:org.gjt.sp.jedit.OptionPane" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.OptionsDialog::ok():void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.OptionsDialog::cancel():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.options.BufferOptionPane" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.BufferOptions" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.BufferOptions::panel:org.gjt.sp.jedit.options.BufferOptionPane" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.BufferOptions::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.gui.MutableListModel" />
			<role name="Adapter" element="org.gjt.sp.jedit.gui.PasteFromListDialog" />
			<role name="adaptee" element="org.gjt.sp.jedit.gui.PasteFromListDialog::listModel:org.gjt.sp.jedit.gui.MutableListModel" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PasteFromListDialog::ok():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.Macros$Handler" />
			<role name="Adapter" element="org.gjt.sp.jedit.Macros$Macro" />
			<role name="adaptee" element="org.gjt.sp.jedit.Macros$Macro::handler:org.gjt.sp.jedit.Macros$Handler" />
			<role name="Request()" element="org.gjt.sp.jedit.Macros$Macro::invoke(org.gjt.sp.jedit.View):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.menu.MenuItemTextComparator" />
			<role name="Adapter" element="org.gjt.sp.jedit.MiscUtilities$MenuItemCompare" />
			<role name="adaptee" element="org.gjt.sp.jedit.MiscUtilities$MenuItemCompare::comparator:org.gjt.sp.jedit.menu.MenuItemTextComparator" />
			<role name="Request()" element="org.gjt.sp.jedit.MiscUtilities$MenuItemCompare::compare(java.lang.Object, java.lang.Object):int" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.IPropertyManager" />
			<role name="Adapter" element="org.gjt.sp.jedit.textarea.MouseActions" />
			<role name="adaptee" element="org.gjt.sp.jedit.textarea.MouseActions::propertyManager:org.gjt.sp.jedit.IPropertyManager" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.MouseActions::getActionForEvent(java.awt.event.MouseEvent, java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.gjt.sp.jedit.IPropertyManager" />
			<role name="Adapter" element="org.gjt.sp.jedit.textarea.StandaloneTextArea$StandaloneActionSet" />
			<role name="adaptee" element="org.gjt.sp.jedit.textarea.StandaloneTextArea$StandaloneActionSet::iPropertyManager:org.gjt.sp.jedit.IPropertyManager" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.StandaloneTextArea$StandaloneActionSet::getProperty(java.lang.String):java.lang.String" />
		</instance>
	</pattern>
	<pattern name="Command" />
	<pattern name="Composite" />
	<pattern name="Decorator">
		<instance>
			<role name="Component" element="org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="Decorator" element="org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit" />
			<role name="component" element="org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit::last:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="component" element="org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit::first:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="Operation()" element="org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit::undo():int" />
			<role name="Operation()" element="org.gjt.sp.jedit.buffer.UndoManager$CompoundEdit::redo():int" />
		</instance>
		<instance>
			<role name="Component" element="org.gjt.sp.jedit.bsh.ConsoleInterface" />
			<role name="Decorator" element="org.gjt.sp.jedit.bsh.Interpreter" />
			<role name="component" element="org.gjt.sp.jedit.bsh.Interpreter::console:org.gjt.sp.jedit.bsh.ConsoleInterface" />
			<role name="Operation()" element="org.gjt.sp.jedit.bsh.Interpreter::error(java.lang.Object):void" />
			<role name="Operation()" element="org.gjt.sp.jedit.bsh.Interpreter::print(java.lang.Object):void" />
		</instance>
	</pattern>
	<pattern name="Observer">
		<instance>
			<role name="Observer" element="org.gjt.sp.jedit.buffer.BufferUndoListener" />
			<role name="Subject" element="org.gjt.sp.jedit.buffer.JEditBuffer" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireBeginUndo():void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireEndUndo():void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireBeginRedo():void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireEndRedo():void" />
		</instance>
		<instance>
			<role name="Observer" element="org.gjt.sp.jedit.help.HelpHistoryModelListener" />
			<role name="Subject" element="org.gjt.sp.jedit.help.HelpHistoryModel" />
			<role name="Notify()" element="org.gjt.sp.jedit.help.HelpHistoryModel::fireUpdate():void" />
		</instance>
		<instance>
			<role name="Observer" element="org.gjt.sp.jedit.buffer.BufferListener" />
			<role name="Subject" element="org.gjt.sp.jedit.buffer.JEditBuffer" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireFoldLevelChanged(int, int):void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireContentInserted(int, int, int, int):void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireContentRemoved(int, int, int, int):void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::firePreContentInserted(int, int, int, int):void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::firePreContentRemoved(int, int, int, int):void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireTransactionComplete():void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireFoldHandlerChanged():void" />
			<role name="Notify()" element="org.gjt.sp.jedit.buffer.JEditBuffer::fireBufferLoaded():void" />
		</instance>
		<instance>
			<role name="Observer" element="org.gjt.sp.jedit.textarea.StructureMatcher" />
			<role name="Subject" element="org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Notify()" element="org.gjt.sp.jedit.textarea.TextArea::updateStructureHighlight():void" />
		</instance>
	</pattern>
	<pattern name="State">
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.ActionListHandler" />
			<role name="State" element="org.gjt.sp.jedit.JEditActionSet" />
			<role name="state" element="org.gjt.sp.jedit.ActionListHandler::actionSet:org.gjt.sp.jedit.JEditActionSet" />
			<role name="Request()" element="org.gjt.sp.jedit.ActionListHandler::endElement(java.lang.String, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.help.HelpSearchPanel" />
			<role name="State" element="org.gjt.sp.jedit.help.HelpViewerInterface" />
			<role name="state" element="org.gjt.sp.jedit.help.HelpSearchPanel::helpViewer:org.gjt.sp.jedit.help.HelpViewerInterface" />
			<role name="Request()" element="org.gjt.sp.jedit.help.HelpSearchPanel::getHelpIndex():org.gjt.sp.jedit.help.HelpIndex" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.help.HelpTOCPanel" />
			<role name="State" element="org.gjt.sp.jedit.help.HelpViewerInterface" />
			<role name="state" element="org.gjt.sp.jedit.help.HelpTOCPanel::helpViewer:org.gjt.sp.jedit.help.HelpViewerInterface" />
			<role name="Request()" element="org.gjt.sp.jedit.help.HelpTOCPanel::loadTOC(javax.swing.tree.DefaultMutableTreeNode, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath" />
			<role name="State" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath$MappingFeedback" />
			<role name="state" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::mappingFeedbackListener:org.gjt.sp.jedit.bsh.classpath.BshClassPath$MappingFeedback" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::startClassMapping():void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::classMapping(java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::errorWhileMapping(java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.bsh.classpath.BshClassPath::endClassMapping():void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.menu.EnhancedMenu" />
			<role name="State" element="org.gjt.sp.jedit.menu.DynamicMenuProvider" />
			<role name="state" element="org.gjt.sp.jedit.menu.EnhancedMenu::provider:org.gjt.sp.jedit.menu.DynamicMenuProvider" />
			<role name="Request()" element="org.gjt.sp.jedit.menu.EnhancedMenu::init():void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.search.SearchAndReplace" />
			<role name="State" element="org.gjt.sp.jedit.search.SearchFileSet" />
			<role name="state" element="org.gjt.sp.jedit.search.SearchAndReplace::fileset:org.gjt.sp.jedit.search.SearchFileSet" />
			<role name="Request()" element="org.gjt.sp.jedit.search.SearchAndReplace::find(org.gjt.sp.jedit.View):boolean" />
			<role name="Request()" element="org.gjt.sp.jedit.search.SearchAndReplace::replaceAll(org.gjt.sp.jedit.View, boolean):boolean" />
			<role name="Request()" element="org.gjt.sp.jedit.search.SearchAndReplace::record(org.gjt.sp.jedit.View, java.lang.String, boolean, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.BeanShell" />
			<role name="State" element="org.gjt.sp.jedit.BeanShellFacade" />
			<role name="state" element="org.gjt.sp.jedit.BeanShell::bsh:org.gjt.sp.jedit.BeanShellFacade" />
			<role name="Request()" element="org.gjt.sp.jedit.BeanShell::showEvaluateDialog(org.gjt.sp.jedit.View):void" />
			<role name="Request()" element="org.gjt.sp.jedit.BeanShell::runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, boolean):void" />
			<role name="Request()" element="org.gjt.sp.jedit.BeanShell::runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, org.gjt.sp.jedit.bsh.NameSpace):void" />
			<role name="Request()" element="org.gjt.sp.jedit.BeanShell::_runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, org.gjt.sp.jedit.bsh.NameSpace):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.Registers" />
			<role name="State" element="org.gjt.sp.jedit.RegisterSaver" />
			<role name="state" element="org.gjt.sp.jedit.Registers::saver:org.gjt.sp.jedit.RegisterSaver" />
			<role name="Request()" element="org.gjt.sp.jedit.Registers::saveRegisters():void" />
			<role name="Request()" element="org.gjt.sp.jedit.Registers::loadRegisters():void" />
		</instance>
		<instance>
			<role name="Context" element="com.microstar.xml.XmlParser" />
			<role name="State" element="com.microstar.xml.XmlHandler" />
			<role name="state" element="com.microstar.xml.XmlParser::handler:com.microstar.xml.XmlHandler" />
			<role name="Request()" element="com.microstar.xml.XmlParser::doParse(java.lang.String, java.lang.String, java.io.Reader, java.io.InputStream, java.lang.String):void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::error(java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::parsePI():void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::parseDoctypedecl():void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::parseElement():void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::parseAttribute(java.lang.String):void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::parseETag():void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::dataBufferFlush():void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::pushURL(java.lang.String, java.lang.String, java.lang.String, java.io.Reader, java.io.InputStream, java.lang.String):void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::popInput():void" />
			<role name="Request()" element="com.microstar.xml.XmlParser::encodingError(java.lang.String, int, int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.buffer.UndoManager" />
			<role name="State" element="org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="state" element="org.gjt.sp.jedit.buffer.UndoManager::undosLast:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="state" element="org.gjt.sp.jedit.buffer.UndoManager::redosFirst:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="state" element="org.gjt.sp.jedit.buffer.UndoManager::undosFirst:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.UndoManager::undo():int" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.UndoManager::redo():int" />
		</instance>
		<instance>
			<role name="State" element="org.gjt.sp.jedit.syntax.TokenHandler" />
			<role name="Context" element="org.gjt.sp.jedit.syntax.TokenMarker" />
			<role name="state" element="org.gjt.sp.jedit.syntax.TokenMarker::tokenHandler:org.gjt.sp.jedit.syntax.TokenHandler" />
			<role name="Request()" element="org.gjt.sp.jedit.syntax.TokenMarker::markTokens(org.gjt.sp.jedit.syntax.TokenMarker$LineContext, org.gjt.sp.jedit.syntax.TokenHandler, javax.swing.text.Segment):org.gjt.sp.jedit.syntax.TokenMarker$LineContext" />
			<role name="Request()" element="org.gjt.sp.jedit.syntax.TokenMarker::checkDelegateEnd(org.gjt.sp.jedit.syntax.ParserRule):boolean" />
			<role name="Request()" element="org.gjt.sp.jedit.syntax.TokenMarker::handleRule(org.gjt.sp.jedit.syntax.ParserRule, boolean):boolean" />
			<role name="Request()" element="org.gjt.sp.jedit.syntax.TokenMarker::handleNoWordBreak():void" />
			<role name="Request()" element="org.gjt.sp.jedit.syntax.TokenMarker::markKeyword(boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.buffer.JEditBuffer" />
			<role name="State" element="org.gjt.sp.jedit.buffer.FoldHandler" />
			<role name="state" element="org.gjt.sp.jedit.buffer.JEditBuffer::foldHandler:org.gjt.sp.jedit.buffer.FoldHandler" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.JEditBuffer::getFoldLevel(int):int" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.gui.CompletionPopup" />
			<role name="State" element="org.gjt.sp.jedit.gui.CompletionPopup$Candidates" />
			<role name="state" element="org.gjt.sp.jedit.gui.CompletionPopup::candidates:org.gjt.sp.jedit.gui.CompletionPopup$Candidates" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.CompletionPopup::reset(org.gjt.sp.jedit.gui.CompletionPopup$Candidates, boolean):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.CompletionPopup::setSelectedIndex(int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.CompletionPopup::doSelectedCompletion():boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.Registers" />
			<role name="State" element="org.gjt.sp.jedit.Registers$Register" />
			<role name="state" element="org.gjt.sp.jedit.Registers::registers:org.gjt.sp.jedit.Registers$Register[]" />
			<role name="Request()" element="org.gjt.sp.jedit.Registers::clearRegister(char):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter" />
			<role name="State" element="org.gjt.sp.jedit.buffer.BufferChangeListener" />
			<role name="state" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::delegate:org.gjt.sp.jedit.buffer.BufferChangeListener" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::foldLevelChanged(org.gjt.sp.jedit.buffer.JEditBuffer, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::contentInserted(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::contentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::preContentRemoved(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, int):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::transactionComplete(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::foldHandlerChanged(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
			<role name="Request()" element="org.gjt.sp.jedit.buffer.BufferChangeListener$Adapter::bufferLoaded(org.gjt.sp.jedit.buffer.JEditBuffer):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.gui.HistoryModel" />
			<role name="State" element="org.gjt.sp.jedit.gui.HistoryModelSaver" />
			<role name="state" element="org.gjt.sp.jedit.gui.HistoryModel::saver:org.gjt.sp.jedit.gui.HistoryModelSaver" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.HistoryModel::loadHistory():void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.HistoryModel::saveHistory():void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.gui.PasteFromListDialog" />
			<role name="State" element="org.gjt.sp.jedit.gui.MutableListModel" />
			<role name="state" element="org.gjt.sp.jedit.gui.PasteFromListDialog::listModel:org.gjt.sp.jedit.gui.MutableListModel" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.PasteFromListDialog::ok():void" />
		</instance>
		<instance>
			<role name="State" element="org.gjt.sp.jedit.textarea.FoldPainter" />
			<role name="Context" element="org.gjt.sp.jedit.textarea.Gutter" />
			<role name="state" element="org.gjt.sp.jedit.textarea.Gutter::foldPainter:org.gjt.sp.jedit.textarea.FoldPainter" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.Gutter::paintLine(java.awt.Graphics2D, int, int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.search.HyperSearchRequest" />
			<role name="State" element="org.gjt.sp.jedit.textarea.Selection" />
			<role name="state" element="org.gjt.sp.jedit.search.HyperSearchRequest::selection:org.gjt.sp.jedit.textarea.Selection[]" />
			<role name="Request()" element="org.gjt.sp.jedit.search.HyperSearchRequest::searchInSelection(org.gjt.sp.jedit.Buffer):int" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.Macros$Macro" />
			<role name="State" element="org.gjt.sp.jedit.Macros$Handler" />
			<role name="state" element="org.gjt.sp.jedit.Macros$Macro::handler:org.gjt.sp.jedit.Macros$Handler" />
			<role name="Request()" element="org.gjt.sp.jedit.Macros$Macro::invoke(org.gjt.sp.jedit.View):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.util.SyntaxUtilities" />
			<role name="State" element="org.gjt.sp.jedit.IPropertyManager" />
			<role name="state" element="org.gjt.sp.util.SyntaxUtilities::propertyManager:org.gjt.sp.jedit.IPropertyManager" />
			<role name="Request()" element="org.gjt.sp.util.SyntaxUtilities::loadStyles(java.lang.String, int, boolean):org.gjt.sp.jedit.syntax.SyntaxStyle[]" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.Registers" />
			<role name="State" element="org.gjt.sp.jedit.RegistersListener" />
			<role name="state" element="org.gjt.sp.jedit.Registers::listener:org.gjt.sp.jedit.RegistersListener" />
			<role name="Request()" element="org.gjt.sp.jedit.Registers::setRegister(char, org.gjt.sp.jedit.Registers$Register):void" />
			<role name="Request()" element="org.gjt.sp.jedit.Registers::setRegister(char, java.lang.String):void" />
			<role name="Request()" element="org.gjt.sp.jedit.Registers::clearRegister(char):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.gui.StatusBar" />
			<role name="State" element="org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::wrapWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::lineSepWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::modeWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::foldWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::encodingWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::multiSelectWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::rectSelectWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="state" element="org.gjt.sp.jedit.gui.StatusBar::overwriteWidget:org.gjt.sp.jedit.gui.statusbar.Widget" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.StatusBar::updateBufferStatus():void" />
			<role name="Request()" element="org.gjt.sp.jedit.gui.StatusBar::updateMiscStatus():void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.textarea.Gutter$MouseHandler" />
			<role name="State" element="org.gjt.sp.jedit.textarea.MouseActionsProvider" />
			<role name="state" element="org.gjt.sp.jedit.textarea.Gutter$MouseHandler::mouseActions:org.gjt.sp.jedit.textarea.MouseActionsProvider" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.Gutter$MouseHandler::mousePressed(java.awt.event.MouseEvent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.textarea.StandaloneTextArea" />
			<role name="State" element="org.gjt.sp.jedit.IPropertyManager" />
			<role name="state" element="org.gjt.sp.jedit.textarea.StandaloneTextArea::propertyManager:org.gjt.sp.jedit.IPropertyManager" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.StandaloneTextArea::initTextArea():void" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.StandaloneTextArea::getProperty(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.textarea.MouseActions" />
			<role name="State" element="org.gjt.sp.jedit.IPropertyManager" />
			<role name="state" element="org.gjt.sp.jedit.textarea.MouseActions::propertyManager:org.gjt.sp.jedit.IPropertyManager" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.MouseActions::getActionForEvent(java.awt.event.MouseEvent, java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.textarea.StandaloneTextArea$StandaloneActionSet" />
			<role name="State" element="org.gjt.sp.jedit.IPropertyManager" />
			<role name="state" element="org.gjt.sp.jedit.textarea.StandaloneTextArea$StandaloneActionSet::iPropertyManager:org.gjt.sp.jedit.IPropertyManager" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.StandaloneTextArea$StandaloneActionSet::getProperty(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.search.HyperSearchRequest" />
			<role name="State" element="org.gjt.sp.jedit.search.SearchMatcher" />
			<role name="state" element="org.gjt.sp.jedit.search.HyperSearchRequest::matcher:org.gjt.sp.jedit.search.SearchMatcher" />
			<role name="Request()" element="org.gjt.sp.jedit.search.HyperSearchRequest::doHyperSearch(org.gjt.sp.jedit.Buffer, int, int, javax.swing.tree.DefaultMutableTreeNode):int" />
		</instance>
		<instance>
			<role name="Context" element="org.gjt.sp.jedit.textarea.Gutter$MouseHandler" />
			<role name="State" element="org.gjt.sp.jedit.textarea.GutterPopupHandler" />
			<role name="state" element="org.gjt.sp.jedit.textarea.Gutter$MouseHandler::selectionPopupHandler:org.gjt.sp.jedit.textarea.GutterPopupHandler" />
			<role name="Request()" element="org.gjt.sp.jedit.textarea.Gutter$MouseHandler::mousePressed(java.awt.event.MouseEvent):void" />
		</instance>
	</pattern>
	<pattern name="Strategy" />
	<pattern name="Bridge">
		<instance>
			<role name="Abstraction" element="org.gjt.sp.jedit.textarea.TextArea" />
			<role name="Implementor" element="org.gjt.sp.jedit.input.InputHandlerProvider" />
			<role name="implementor" element="org.gjt.sp.jedit.textarea.TextArea::inputHandlerProvider:org.gjt.sp.jedit.input.InputHandlerProvider" />
			<role name="Operation()" element="org.gjt.sp.jedit.textarea.TextArea::getInputHandler():org.gjt.sp.jedit.input.AbstractInputHandler" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.gjt.sp.jedit.gui.OptionsDialog" />
			<role name="Implementor" element="org.gjt.sp.jedit.OptionPane" />
			<role name="implementor" element="org.gjt.sp.jedit.gui.OptionsDialog::currentPane:org.gjt.sp.jedit.OptionPane" />
			<role name="Operation()" element="org.gjt.sp.jedit.gui.OptionsDialog::ok():void" />
			<role name="Operation()" element="org.gjt.sp.jedit.gui.OptionsDialog::cancel():void" />
			<role name="Operation()" element="org.gjt.sp.jedit.gui.OptionsDialog::valueChanged(javax.swing.event.TreeSelectionEvent):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.gjt.sp.jedit.buffer.FoldHandler" />
			<role name="Implementor" element="org.gjt.sp.jedit.buffer.FoldHandlerProvider" />
			<role name="implementor" element="org.gjt.sp.jedit.buffer.FoldHandler::foldHandlerProvider:org.gjt.sp.jedit.buffer.FoldHandlerProvider" />
			<role name="Operation()" element="org.gjt.sp.jedit.buffer.FoldHandler::getFoldHandler(java.lang.String):org.gjt.sp.jedit.buffer.FoldHandler" />
			<role name="Operation()" element="org.gjt.sp.jedit.buffer.FoldHandler::getFoldModes():java.lang.String[]" />
		</instance>
	</pattern>
	<pattern name="Template Method">
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.BeanShellFacade" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.BeanShellFacade::eval(T, org.gjt.sp.jedit.bsh.NameSpace, java.lang.String):java.lang.Object" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.BeanShellFacade::_eval(T, org.gjt.sp.jedit.bsh.NameSpace, java.lang.String):java.lang.Object" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.BeanShellFacade::runCachedBlock(org.gjt.sp.jedit.bsh.BshMethod, T, org.gjt.sp.jedit.bsh.NameSpace):java.lang.Object" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.bsh.ReflectManager" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.bsh.ReflectManager::RMSetAccessible(java.lang.Object):boolean" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.EditAction" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.EditAction::invoke(java.lang.Object):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.gui.AbstractContextOptionPane" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.AbstractContextOptionPane::_init():void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.AbstractContextOptionPane::_save():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.gui.DockableWindowManager$DockingLayout" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager$DockingLayout::getLayoutDirectory():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.gui.DockableWindowManager" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::applyDockingLayout(org.gjt.sp.jedit.gui.DockableWindowManager$DockingLayout):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::addDockableWindow(java.lang.String):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::removeDockableWindow(java.lang.String):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::toggleDockableWindow(java.lang.String):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::toggleDockAreas():void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.DockableWindowManager::handleMessage(org.gjt.sp.jedit.EBMessage):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.gui.FilteredTableModel" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.FilteredTableModel::setFilter(java.lang.String):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.gui.OptionsDialog" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.OptionsDialog::addOptionGroup(org.gjt.sp.jedit.OptionGroup):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.OptionsDialog::addOptionPane(org.gjt.sp.jedit.OptionPane):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.gui.OptionsDialog::init(java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.input.AbstractInputHandler" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.input.AbstractInputHandler::processKeyEventKeyStrokeHandling(java.awt.event.KeyEvent, int, java.lang.String, boolean):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.input.TextAreaInputHandler" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.input.TextAreaInputHandler::invokeAction(java.lang.String):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.JEditAbstractEditAction" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.JEditAbstractEditAction::invoke(E, java.lang.Object[]):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.JEditActionSet" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.JEditActionSet::getActions():org.gjt.sp.jedit.JEditAbstractEditAction[]" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.JEditActionSet::initKeyBindings():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.Macros$Handler" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.Macros$Handler::runMacro(org.gjt.sp.jedit.View, org.gjt.sp.jedit.Macros$Macro, boolean):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.search.BufferListSet" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.search.BufferListSet::getFirstFile(org.gjt.sp.jedit.View):java.lang.String" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.search.BufferListSet::getNextFile(org.gjt.sp.jedit.View, java.lang.String):java.lang.String" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.search.BufferListSet::getFiles(org.gjt.sp.jedit.View):java.lang.String[]" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.search.BufferListSet::getFileCount(org.gjt.sp.jedit.View):int" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.syntax.XModeHandler" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.syntax.XModeHandler::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.syntax.XModeHandler::endElement(java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.syntax.XModeHandler::addKeyword(java.lang.String, byte):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.gjt.sp.jedit.textarea.ShapedFoldPainter" />
			<role name="TemplateMethod()" element="org.gjt.sp.jedit.textarea.ShapedFoldPainter::paintFoldStart(org.gjt.sp.jedit.textarea.Gutter, java.awt.Graphics2D, int, int, boolean, int, int, org.gjt.sp.jedit.buffer.JEditBuffer):void" />
		</instance>
	</pattern>
	<pattern name="Visitor" />
	<pattern name="Proxy">
		<instance>
			<role name="Proxy" element="org.gjt.sp.jedit.io.EncodingWithBOM" />
			<role name="RealSubject" element="org.gjt.sp.jedit.io.CharsetEncoding" />
			<role name="Request()" element="org.gjt.sp.jedit.io.EncodingWithBOM::getTextReader(java.io.InputStream):java.io.Reader" />
			<role name="Request()" element="org.gjt.sp.jedit.io.EncodingWithBOM::getTextWriter(java.io.OutputStream):java.io.Writer" />
			<role name="Request()" element="org.gjt.sp.jedit.io.EncodingWithBOM::getPermissiveTextReader(java.io.InputStream):java.io.Reader" />
		</instance>
	</pattern>
	<pattern name="Proxy2" />
	<pattern name="Chain of Responsibility">
		<instance>
			<role name="Handler" element="org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="successor" element="org.gjt.sp.jedit.buffer.UndoManager$Edit::prev:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
			<role name="successor" element="org.gjt.sp.jedit.buffer.UndoManager$Edit::next:org.gjt.sp.jedit.buffer.UndoManager$Edit" />
		</instance>
	</pattern>
</system>

