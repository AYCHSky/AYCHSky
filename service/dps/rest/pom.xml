<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.europeana.cloud</groupId>
		<artifactId>ecloud-service-dps</artifactId>
		<version>0.3-SNAPSHOT</version>
	</parent>

	<artifactId>ecloud-service-dps-rest</artifactId>
	<packaging>war</packaging>
	<name>Europeana Cloud: DPS REST</name>

	<properties>
		<main.directory>${project.parent.basedir}</main.directory>
	</properties>

	<profiles>

		<profile>
			<id>zookeeper</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.config.dir>zookeeper</spring.config.dir>
			</properties>
			<dependencies>
				<dependency>
					<groupId>eu.europeana.cloud</groupId>
					<artifactId>ecloud-service-dps-kafka</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>eu.europeana.cloud</groupId>
					<artifactId>ecloud-service-dps-zoo</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>zoo-kafka</id>
			<properties>
				<spring.config.dir>zoo-kafka</spring.config.dir>
			</properties>
			<dependencies>
				<dependency>
					<groupId>eu.europeana.cloud</groupId>
					<artifactId>ecloud-service-dps-kafka</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>zookeeper/</exclude>
					<exclude>zoo-kafka/</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<!-- copies spring config file from path defined in profile to resources 
				dir -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/${spring.config.dir}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--configuration of miredot - REST API documentation generator. -->
			<plugin>
				<groupId>com.qmino</groupId>
				<artifactId>miredot-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>restdoc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-service-dps-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-service-cos</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Authentication + Authorization -->
		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-service-aas-authorization</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-service-aas-authentication</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>eu.europeana.cloud</groupId>
			<artifactId>ecloud-common</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jackson-core-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-mapper-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
			<exclusions>
				<!--without jcl - because we use log4j through slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>compile</scope>
		</dependency>

		<!--Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
		</dependency>

		<!-- JSON serialization with moxy -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
		</dependency>

		<!--logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<!-- SLF4J extensions -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-ext</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- tests -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
			<version>${version.spring-framework}</version>
			<exclusions>
				<!--without jcl - because we use log4j through slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.kubek2k</groupId>
			<artifactId>springockito</artifactId>
			<version>1.0.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>2.13</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>2.13</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>${version.junitparams}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.cassandraunit</groupId>
			<artifactId>cassandra-unit</artifactId>
			<version>${version.cassandra-unit}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
